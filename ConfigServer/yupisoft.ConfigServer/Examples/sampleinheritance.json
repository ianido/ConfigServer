{
  "configuration": {
    "base": {
      "field0": "value2",
      "fieldA": "5678",
      "field2": "1111"
    },
    "newobject": {
      "$inherits": "*configuration.baseobject",
      "field0": "valueAXb",
      "field1": "value1XY",
      "field2": "value2X1",
      "array": [
        1,
        3
      ]
    },
    "baseobject": {
      "field0": "value1X",
      "fieldB": "valueB"
    },
    "hooks": {
      "hook.change01": {
        "$hook": "$datanode.change",
        "Id": "h1",
        "Description": "",
        "node": "configuration.baseobject.field0",
        "Notifications": [
          {
            "Id": "http-01",
            "Name": "Http Notification",
            "http": "http://localhost/datachange"
          }
        ]
      },
      "hook.change02": {
        "$hook": "$servicestatus.change",
        "Id": "h2",
        "Description": "",
        "ServiceName": "redis",
        "Notifications": [
          {
            "Id": "mail-01",
            "Name": "Email Notification",
            "Email": "igarcia@nearsolutions.net",
            "EmailFrom": "igarcia@nearsolutions.net",
            "SMTP": "smtp.gmail.com:587",
            "Username": "israel3000@gmail.com",
            "Password": "manasa12",
            "EmailUseSSL": "false",
            "EmailSubject": "Service $servicename status change to '$statusto'.",
            "EmailBody": "Service was in: '$statusfrom' for $timespan. \nRegards.\nService Monitor."
          }
        ]
      }
    },
    "services": {
      "srv01.europa1": {
        "$service": "redis",
        "Id": "r01",
        "description": "Redis Server in Europa",
        "balancer": "geo",
        "tags": [
          "primary",
          "geo-pos"
        ],
        "address": "2.21.92.25",
        "port": 80,
        "checks": [
          {
            "id": "api",
            "name": "HTTP API on port 80",
            "http": "http://$address/health",
            "interval": "3s",
            "timeout": "1s",
            "tlsSkipVerify": "true",
            "disabled": true,
            "notes": "HTTP response code: any 2xx code is considered passing, a 429 Too Many Requests is a warning, and anything else is a failure."
          },
          {
            "id": "mem-util",
            "name": "Memory utilization",
            "script": "/temp/check_mem.exe",
            "interval": "10s",
            "timeout": "1s",
            "disabled": true,
            "notes": "Exit code 0 - Check is passing, Exit code 1 - Check is warning, Any other code - Check is failing"
          },
          {
            "id": "ssh",
            "name": "SSH TCP on port 1433",
            "tcp": "127.0.0.1:1433",
            "interval": "10s",
            "timeout": "2s",
            "disabled": false,
            "notes": "If the connection is accepted, the status is success, otherwise the status is critical"
          }
        ]
      },
      "srv01.europa2": {
        "$service": "redis",
        "Id": "r02",
        "description": "Redis Server in Europa",
        "balancer": "geo",
        "tags": [
          "primary",
          "geo-pos"
        ],
        "address": "2.21.92.26",
        "port": 80,
        "checks": [
          {
            "id": "api",
            "name": "HTTP API on port 80",
            "http": "http://$address/health",
            "interval": "3s",
            "timeout": "1s",
            "tlsSkipVerify": "true",
            "disabled": true,
            "notes": "HTTP response code: any 2xx code is considered passing, a 429 Too Many Requests is a warning, and anything else is a failure."
          },
          {
            "id": "mem-util",
            "name": "Memory utilization",
            "script": "/temp/check_mem.exe",
            "interval": "10s",
            "timeout": "1s",
            "disabled": true,
            "notes": "Exit code 0 - Check is passing, Exit code 1 - Check is warning, Any other code - Check is failing"
          },
          {
            "id": "ssh",
            "name": "SSH TCP on port 1433",
            "tcp": "127.0.0.1:1433",
            "interval": "15s",
            "timeout": "2s",
            "disabled": false,
            "notes": "If the connection is accepted, the status is success, otherwise the status is critical"
          }
        ]
      },
      "srv01.america": {
        "$service": "redis",
        "Id": "r03",
        "description": "Redis server in America",
        "tags": [
          "secondary",
          "geo-pos"
        ],
        "address": "1.0.15.25",
        "port": 80,
        "checks": [
          {
            "id": "api",
            "name": "HTTP API on port 80",
            "http": "http://$address/health",
            "interval": "3s",
            "timeout": "1s",
            "tlsSkipVerify": "true",
            "disabled": true,
            "notes": "HTTP response code: any 2xx code is considered passing, a 429 Too Many Requests is a warning, and anything else is a failure."
          },
          {
            "id": "mem-util",
            "name": "Memory utilization",
            "script": "/temp/check_mem.exe",
            "interval": "10s",
            "timeout": "1s",
            "disabled": true,
            "notes": "Exit code 0 - Check is passing, Exit code 1 - Check is warning, Any other code - Check is failing"
          },
          {
            "id": "ssh",
            "name": "SSH TCP on port 1433",
            "tcp": "127.0.0.1:1433",
            "interval": "5s",
            "timeout": "2s",
            "disabled": false,
            "notes": "If the connection is accepted, the status is success, otherwise the status is critical"
          }
        ]
      }
    }
  }
}