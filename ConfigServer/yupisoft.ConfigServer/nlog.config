<?xml version="1.0" encoding="utf-8" ?>
<nlog autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- Load the ASP.NET Core plugin -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>

    <target name="console" type="ColoredConsole" 
            layout="${longdate}|${logger:shortName=true}|${uppercase:${level}}|${message} ${exception}"/>
    <!-- write logs to file -->
    <target type="File" name="allfile" fileName="${basedir}\logs\nlog-all-${shortdate}.log"
                layout="${longdate}|${logger:shortName=true}|${uppercase:${level}}|${message} ${exception}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target type="File" name="ownFile-web" fileName="${basedir}\logs\nlog-own-${shortdate}.log"
            layout="${longdate}|${logger:shortName=true}|${uppercase:${level}}| ${message} ${exception}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!-- write to the void aka just remove -->
    <target type="Null" name="blackhole" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
    <logger name="*" minlevel="Trace" writeTo="console" />

  </rules>
</nlog>
