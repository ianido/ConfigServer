



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `masterconfig`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Application Name=MasterConfig;Data Source=MIASAWST03;Initial Catalog=ASP_MasterConfig;USER=sb;password=AHPDRW`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace masterconfig
{

	public partial class masterconfigDB : Database
	{
		public masterconfigDB() 
			: base("masterconfig")
		{
			CommonConstruct();
		}

		public masterconfigDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			masterconfigDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static masterconfigDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new masterconfigDB();
        }

		[ThreadStatic] static masterconfigDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static masterconfigDB repo { get { return masterconfigDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    
	[TableName("conf_ApplicationSettings")]


	[PrimaryKey("ApplicationSettingsIdx")]



	[ExplicitColumns]
    public partial class conf_ApplicationSetting : masterconfigDB.Record<conf_ApplicationSetting>  
    {



		[Column] public int ApplicationSettingsIdx { get; set; }





		[Column] public Guid ApplicationGuid { get; set; }





		[Column] public Guid SettingTypeGuid { get; set; }





		[Column] public string SettingValue { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }





		[Column] public Guid EnvironmentGuid { get; set; }





		[Column] public Guid? AccountGuid { get; set; }



	}

    
	[TableName("conf_OfficeIds")]


	[PrimaryKey("OfficeGuid", autoIncrement=false)]

	[ExplicitColumns]
    public partial class conf_OfficeId : masterconfigDB.Record<conf_OfficeId>  
    {



		[Column] public Guid OfficeGuid { get; set; }





		[Column] public Guid OfficeTypeGuid { get; set; }





		[Column] public Guid AccountGuid { get; set; }





		[Column] public string OfficeId { get; set; }





		[Column] public bool IsPrimary { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }





		[Column] public int AWSRMProjectDefinition { get; set; }



	}

    
	[TableName("sysdiagrams")]


	[PrimaryKey("diagram_id")]



	[ExplicitColumns]
    public partial class sysdiagram : masterconfigDB.Record<sysdiagram>  
    {



		[Column] public string name { get; set; }





		[Column] public int principal_id { get; set; }





		[Column] public int diagram_id { get; set; }





		[Column] public int? version { get; set; }





		[Column] public byte[] definition { get; set; }



	}

    
	[TableName("ref_OfficeIdTypes")]


	[PrimaryKey("OfficeTypeGuid", autoIncrement=false)]

	[ExplicitColumns]
    public partial class ref_OfficeIdType : masterconfigDB.Record<ref_OfficeIdType>  
    {



		[Column] public Guid OfficeTypeGuid { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string Description { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}

    
	[TableName("conf_Accounts")]


	[PrimaryKey("AccountGuid", autoIncrement=false)]

	[ExplicitColumns]
    public partial class conf_Account : masterconfigDB.Record<conf_Account>  
    {



		[Column] public Guid AccountGuid { get; set; }





		[Column] public long IDPAccountIdx { get; set; }





		[Column] public string Name { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}

    
	[TableName("ref_Applications")]


	[PrimaryKey("ApplicationGuid", autoIncrement=false)]

	[ExplicitColumns]
    public partial class ref_Application : masterconfigDB.Record<ref_Application>  
    {



		[Column] public Guid ApplicationGuid { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string Description { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}

    
	[TableName("ref_Environments")]


	[PrimaryKey("EnvironmentGuid", autoIncrement=false)]

	[ExplicitColumns]
    public partial class ref_Environment : masterconfigDB.Record<ref_Environment>  
    {



		[Column] public Guid EnvironmentGuid { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string Description { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}

    
	[TableName("conf_DataRententionPolicy")]


	[PrimaryKey("RetentionIdx")]



	[ExplicitColumns]
    public partial class conf_DataRententionPolicy : masterconfigDB.Record<conf_DataRententionPolicy>  
    {



		[Column] public int RetentionIdx { get; set; }





		[Column] public Guid AccountGuid { get; set; }





		[Column] public Guid EnvironmentGuid { get; set; }





		[Column] public int LogErrorsInDays { get; set; }





		[Column] public int LogInformationInDays { get; set; }





		[Column] public int LogTraceInDays { get; set; }





		[Column] public int TransactionalDataInDays { get; set; }





		[Column] public int WarehouseDataInYears { get; set; }





		[Column] public bool LogTraceInfo { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}

    
	[TableName("conf_ApplicationPorts")]


	[PrimaryKey("ApplicationPortIdx")]



	[ExplicitColumns]
    public partial class conf_ApplicationPort : masterconfigDB.Record<conf_ApplicationPort>  
    {



		[Column] public int ApplicationPortIdx { get; set; }





		[Column] public Guid ApplicationGuid { get; set; }





		[Column] public Guid EnvironmentGuid { get; set; }





		[Column] public int ServerPort { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}

    
	[TableName("ref_ApplicationSettingTypes")]


	[PrimaryKey("SettingTypeGuid", autoIncrement=false)]

	[ExplicitColumns]
    public partial class ref_ApplicationSettingType : masterconfigDB.Record<ref_ApplicationSettingType>  
    {



		[Column] public Guid SettingTypeGuid { get; set; }





		[Column] public Guid ApplicationGuid { get; set; }





		[Column] public string KeyName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public DateTime TSCreatedOn { get; set; }





		[Column] public string CreatedBy { get; set; }





		[Column] public DateTime TSUpdatedOn { get; set; }





		[Column] public string UpdatedBy { get; set; }





		[Column] public bool MFD { get; set; }



	}


}



